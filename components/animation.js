import { useEffect } from "react"
import { motion, useAnimation } from "framer-motion"

const Rock =() =>{
    return(
        <svg  viewBox="0 0 275 212" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M12.1031 154.581C9.81256 198.056 46.4607 198.056 46.4607 198.056C61.1588 199.384 127.271 202.488 151.211 201.935C158.449 201.381 173.593 197.95 176.265 188.652H199.648C221.362 183.671 223.032 152.126 197.978 148.805H213.01C236.394 143.824 236.394 112.278 211.34 108.958C213.698 108.762 219.691 108.958 219.691 108.958C239.734 105.637 243.074 74.0915 219.691 69.1106H208C229.713 64.1297 226.372 30.9236 206.329 29.2633H176.265C172.368 23.7289 161.901 12.3282 151.211 11L55.05 13.8003C55.05 13.8003 12.1031 13.8003 12.1031 54.9868V154.581Z" fill="#757575"/>
        <path d="M176.265 188.652C173.593 197.95 158.449 201.381 151.211 201.935C127.271 202.488 61.1588 199.384 46.4607 198.056C46.4607 198.056 9.81257 198.056 12.1031 154.581V54.9868C12.1031 13.8003 55.0501 13.8003 55.0501 13.8003L151.211 11C161.901 12.3282 172.368 23.7289 176.265 29.2633M176.265 188.652H199.648C221.362 183.671 223.032 152.126 197.978 148.805M176.265 188.652L144.53 186.992C124.487 185.332 126.158 150.465 144.53 148.805M197.978 148.805H213.01C236.394 143.824 236.394 112.278 211.34 108.958M197.978 148.805H144.53M211.34 108.958C213.698 108.762 219.691 108.958 219.691 108.958C239.734 105.637 243.074 74.0915 219.691 69.1106H208M211.34 108.958H192.967M208 69.1106C229.713 64.1297 226.372 30.9236 206.329 29.2633H176.265M208 69.1106H186.573M176.265 29.2633L186.573 69.1106M144.53 148.805H134.509C109.455 148.805 112.796 110.618 131.168 108.958M131.168 108.958H152.881M131.168 108.958C121.147 107.297 106.115 87.3739 123.888 72.9511M152.881 108.958C158.449 113.385 176.933 119.584 192.967 108.958M152.881 108.958C148.427 98.996 139.52 74.4235 139.52 69.1106C133.395 68.5571 117.472 72.0991 102.774 90.6945C94.423 103.977 82.7313 123.9 49.3265 128.881M192.967 108.958C195.64 106.301 193.524 93.4616 191.297 87.3739L186.573 69.1106" stroke="black" strokeWidth="10" strokeLinecap="round" strokeLinejoin="round"/>
        </svg>
        
    )
}
const Paper =() =>{
    return(
        <svg  viewBox="0 0 275 212" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M134.915 36.7617L103.616 69.554L232.892 69.554C242.417 69.554 256.025 90.9399 234.253 103.772H251.943C270.994 103.772 275.077 133.712 253.304 137.99L245.139 137.99C266.912 146.544 256.025 172.208 242.417 172.208H215.202C236.974 173.633 232.892 205 215.202 205L43.7415 205C21.9688 202.719 8.42883 190 8.42883 163L7 108.049C7 108.049 7 95.2173 15.1648 86.6629L107.699 9.67258C128.111 -0.307792 144.44 19.6527 134.915 36.7617Z" fill="#686868"/>
<path d="M215.202 172.208C236.974 173.633 232.892 205 215.202 205C158.502 205 44.8301 205 43.7415 205C21.9687 202.719 8.42883 190 8.42883 163L7 108.049C7 108.049 6.99999 95.2173 15.1648 86.6629L107.699 9.67258C128.111 -0.307792 144.44 19.6527 134.915 36.7617L103.616 69.554L232.892 69.554C242.417 69.554 256.025 90.94 234.253 103.772M215.202 172.208H242.417C256.025 172.208 266.912 146.544 245.139 137.99M215.202 172.208L147.162 172.208M245.139 137.99L253.304 137.99C275.077 133.712 270.994 103.772 251.943 103.772H234.253M245.139 137.99L158.048 137.99M234.253 103.772L152.605 103.772" stroke="black" strokeWidth="10"/>
</svg>
  
    )
}
const Scissor =() =>{
    return(
        <svg  viewBox="0 0 275 212" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7 148.024L7 70.1707C7 54.8732 21.4822 45.5854 28.7233 42.8537L81.6738 27.8293C107.742 20.1805 122.405 37.3902 126.478 46.9512L233.737 21C255.46 21 254.102 46.9512 241.883 51.0488L157.705 81.0976C183.502 85.1951 239.439 94.2098 256.818 97.4878C274.196 102.951 269.037 128.902 256.818 128.902L195.721 127.537C198.436 137.098 186.217 152.122 171.282 148.024C186.217 158.951 179.429 180.805 167.209 180.805L131.909 180.805L128 185C122.5 191 114 190.5 114 190.5L38.2272 182.171C15.0001 180.671 7.00006 161.671 7 148.024Z" fill="#828282"/>
<path d="M131.909 180.805L167.209 180.805C179.429 180.805 186.217 158.951 171.282 148.024M131.909 180.805L119.689 178.073C100.139 166.054 111.543 153.033 119.689 148.024H171.282M131.909 180.805L128 185C122.5 191 114 190.5 114 190.5L38.2272 182.171C15.0001 180.671 7.00006 161.671 7 148.024L7 70.1707C7 54.8732 21.4822 45.5854 28.7233 42.8537L81.6738 27.8293C107.742 20.1805 122.405 37.3902 126.478 46.9512M171.282 148.024C186.217 152.122 198.436 137.098 195.721 127.537M195.721 127.537L256.818 128.902C269.037 128.902 274.196 102.951 256.818 97.4878C239.439 94.2098 183.502 85.1951 157.705 81.0976L241.883 51.0488C254.102 46.9512 255.46 21 233.737 21L126.478 46.9512M195.721 127.537C195.268 123.894 193.277 117.156 183.502 113.878H132.314M126.478 46.9512L132.314 113.878M88.4623 93.3902L97.9662 128.902C113.197 153.488 132.314 135.732 133.267 124.805L132.314 113.878M88.4623 93.3902C79.4109 101.585 58.3212 117.976 46.3734 117.976M88.4623 93.3902L84.3892 81.0976L69.4544 87.9268" stroke="#050505" strokeWidth="10" strokeLinecap="round" storkeLinejoin="round"/>
</svg>

    )
}
const CRock =() =>{
    return(
        <svg  viewBox="0 0 275 212" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M262.897 154.581C265.187 198.056 228.539 198.056 228.539 198.056C213.841 199.384 147.729 202.488 123.789 201.935C116.551 201.381 101.407 197.95 98.735 188.652H75.3516C53.6385 183.671 51.9683 152.126 77.0219 148.805H61.9898C38.6064 143.824 38.6064 112.278 63.6601 108.958C61.3021 108.762 55.3088 108.958 55.3088 108.958C35.266 105.637 31.9255 74.0915 55.3088 69.1106H67.0005C45.2873 64.1297 48.6278 30.9236 68.6706 29.2633H98.735C102.632 23.7289 113.099 12.3282 123.789 11L219.95 13.8003C219.95 13.8003 262.897 13.8003 262.897 54.9868V154.581Z" fill="#757575"/>
<path d="M98.735 188.652C101.407 197.95 116.551 201.381 123.789 201.935C147.729 202.488 213.841 199.384 228.539 198.056C228.539 198.056 265.187 198.056 262.897 154.581V54.9868C262.897 13.8003 219.95 13.8003 219.95 13.8003L123.789 11C113.099 12.3282 102.632 23.7289 98.735 29.2633M98.735 188.652H75.3516C53.6385 183.671 51.9683 152.126 77.0219 148.805M98.735 188.652L130.47 186.992C150.513 185.332 148.842 150.465 130.47 148.805M77.0219 148.805H61.9898C38.6064 143.824 38.6064 112.278 63.6601 108.958M77.0219 148.805H130.47M63.6601 108.958C61.3021 108.762 55.3088 108.958 55.3088 108.958C35.266 105.637 31.9255 74.0915 55.3088 69.1106H67.0005M63.6601 108.958H82.0328M67.0005 69.1106C45.2873 64.1297 48.6278 30.9236 68.6706 29.2633H98.735M67.0005 69.1106H88.4273M98.735 29.2633L88.4273 69.1106M130.47 148.805H140.491C165.545 148.805 162.204 110.618 143.832 108.958M143.832 108.958H122.119M143.832 108.958C153.853 107.297 168.885 87.3739 151.112 72.9511M122.119 108.958C116.551 113.385 98.0671 119.584 82.0328 108.958M122.119 108.958C126.573 98.996 135.48 74.4235 135.48 69.1106C141.605 68.5571 157.528 72.0991 172.226 90.6945C180.577 103.977 192.269 123.9 225.674 128.881M82.0328 108.958C79.3603 106.301 81.476 93.4616 83.703 87.3739L88.4273 69.1106" stroke="black" strokeWidth="10" strokeLinecap="round" storkeLinejoin="round"/>
</svg>

    )
}
const CPaper =() =>{
    return(
        <svg  viewBox="0 0 275 212" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M140.085 36.7617L171.384 69.554L42.1081 69.554C32.5825 69.554 18.9746 90.9399 40.7473 103.772H23.057C4.00584 103.772 -0.0765357 133.712 21.6962 137.99L29.861 137.99C8.08824 146.544 18.9746 172.208 32.5825 172.208H59.7984C38.0257 173.633 42.1081 205 59.7984 205L231.259 205C253.031 202.719 266.571 190 266.571 163L268 108.049C268 108.049 268 95.2173 259.835 86.6629L167.301 9.67258C146.889 -0.307792 130.56 19.6527 140.085 36.7617Z" fill="#686868"/>
        <path d="M59.7984 172.208C38.0257 173.633 42.1081 205 59.7984 205C116.498 205 230.17 205 231.259 205C253.031 202.719 266.571 190 266.571 163L268 108.049C268 108.049 268 95.2173 259.835 86.6629L167.301 9.67258C146.889 -0.307792 130.56 19.6527 140.085 36.7617L171.384 69.554L42.1081 69.554C32.5825 69.554 18.9746 90.94 40.7473 103.772M59.7984 172.208H32.5825C18.9746 172.208 8.08824 146.544 29.861 137.99M59.7984 172.208L127.838 172.208M29.861 137.99L21.6962 137.99C-0.0765356 133.712 4.00584 103.772 23.057 103.772H40.7473M29.861 137.99L116.952 137.99M40.7473 103.772L122.395 103.772" stroke="black" strokeWidth="10"/>
        </svg>
        
    )
}
const CScissor =() =>{
    return(
        <svg  viewBox="0 0 275 212" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M268 148.024V70.1707C268 54.8732 253.518 45.5854 246.277 42.8537L193.326 27.8293C167.258 20.1805 152.595 37.3902 148.522 46.9512L41.2633 21C19.54 21 20.8977 46.9512 33.1171 51.0488L117.295 81.0976C91.4984 85.1951 35.5609 94.2098 18.1823 97.4878C0.80368 102.951 5.96298 128.902 18.1823 128.902L79.279 127.537C76.5636 137.098 88.783 152.122 103.718 148.024C88.783 158.951 95.5715 180.805 107.791 180.805L143.091 180.805L147 185C152.5 191 161 190.5 161 190.5L236.773 182.171C260 180.671 268 161.671 268 148.024Z" fill="#828282"/>
        <path d="M143.091 180.805L107.791 180.805C95.5715 180.805 88.783 158.951 103.718 148.024M143.091 180.805L155.311 178.073C174.861 166.054 163.457 153.033 155.311 148.024H103.718M143.091 180.805L147 185C152.5 191 161 190.5 161 190.5L236.773 182.171C260 180.671 268 161.671 268 148.024V70.1707C268 54.8732 253.518 45.5854 246.277 42.8537L193.326 27.8293C167.258 20.1805 152.595 37.3902 148.522 46.9512M103.718 148.024C88.783 152.122 76.5636 137.098 79.279 127.537M79.279 127.537L18.1823 128.902C5.96297 128.902 0.80369 102.951 18.1823 97.4878C35.5609 94.2098 91.4984 85.1951 117.295 81.0976L33.1171 51.0488C20.8977 46.9512 19.54 21 41.2633 21L148.522 46.9512M79.279 127.537C79.7316 123.894 81.7229 117.156 91.4984 113.878H142.686M148.522 46.9512L142.686 113.878M186.538 93.3902L177.034 128.902C161.803 153.488 142.686 135.732 141.733 124.805L142.686 113.878M186.538 93.3902C195.589 101.585 216.679 117.976 228.627 117.976M186.538 93.3902L190.611 81.0976L205.546 87.9268" stroke="#050505" strokeWidth="10" strokeLinecap="round" storkeLinejoin="round"/>
        </svg>
        
        
    )
}

const Animate =({children, direction, control }) =>{
   
    
     const varient = {

         start:{
             y:['0%','-200%','0%'],
             rotate: [0, direction ==='forward' ? -20 : 20, 0],
             transition:{
               duration :0.5,
               repeat: 2,
               ease: 'easeInOut',
               repeatType: 'reverse'
             }
            }
     }

   

   return (
       <motion.div  animate = {control} variants ={varient} className="w-full">
           {children}
       </motion.div>
   )
}


const Animation = ({control,pInput, cInput}) => {
      

    const handlePlayer=(x) =>{
        switch(x){
            case 'rock':
                return <Rock />
            case 'paper':
                return <Paper />
            case 'scissor':
                return <Scissor /> 
            default: 
               return <Rock />           
        }
    }
    const handleComputer=(x) =>{
        switch(x){
            case 'rock':
                return <CRock />
            case 'paper':
                return <CPaper />
            case 'scissor':
                return <CScissor /> 
            default: 
               return <CRock />           
        }
    }

    return ( <div className="grid grid-cols-2 grow items-end max-w-[500px] w-full gap-5 md:gap-10">
         <Animate   direction = {'forward'} control = {control} >
            {handlePlayer(pInput)}
         </Animate>
         <Animate   direction = {'backward'} control = {control} >
            {handleComputer(cInput)}
         </Animate>
         
    </div> );
}
 
export default Animation;